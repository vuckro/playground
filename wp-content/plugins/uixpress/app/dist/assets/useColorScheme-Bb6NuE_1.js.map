{"version":3,"file":"useColorScheme-Bb6NuE_1.js","sources":["../../src/assets/js/functions/useColorScheme.js"],"sourcesContent":["import { ref, computed } from \"vue\";\nimport { useAppStore } from \"@/store/app/app.js\";\n\nconst prefersDark = ref(false);\nconst userPreference = ref(\"system\");\nconst listenersMounted = ref(false);\nlet mediaQuery = null;\nlet appStore;\n\nconst updateColorScheme = () => {\n  const isDarkMode = userPreference.value === \"dark\" || (userPreference.value === \"system\" && window.matchMedia(\"(prefers-color-scheme: dark)\").matches);\n\n  prefersDark.value = globalOverride.value == \"dark\" ? true : isDarkMode;\n};\n\nconst setColorScheme = (newScheme, dontDispatchChange) => {\n  if ([\"light\", \"dark\", \"system\"].includes(newScheme)) {\n    userPreference.value = newScheme;\n    localStorage.setItem(\"uipc_theme\", newScheme);\n    updateColorScheme();\n\n    // Dispatch change for VendBase\n    if (!dontDispatchChange) {\n      const themeUpdateEvent = new CustomEvent(\"uipx-theme-update\", { detail: newScheme });\n      document.dispatchEvent(themeUpdateEvent);\n    }\n  }\n};\n\nexport const setupColorScheme = () => {\n  userPreference.value = localStorage.getItem(\"uipc_theme\") || \"system\";\n  updateColorScheme();\n\n  if (window.matchMedia) {\n    mediaQuery = window.matchMedia(\"(prefers-color-scheme: dark)\");\n    mediaQuery.addEventListener(\"change\", updateColorScheme);\n  }\n};\n\nexport const cleanupColorScheme = () => {\n  if (mediaQuery) {\n    mediaQuery.removeEventListener(\"change\", updateColorScheme);\n  }\n};\n\nconst globalOverride = computed(() => {\n  if (!appStore) {\n    appStore = useAppStore();\n  }\n\n  const isOverride = appStore?.state?.uixpress_settings?.force_global_theme;\n\n  return isOverride == \"off\" || !isOverride ? false : isOverride;\n});\n\nexport const useColorScheme = () => {\n  if (!listenersMounted.value) {\n    listenersMounted.value = true;\n    document.addEventListener(\"uipx-theme-update\", (evt) => {\n      if (!evt.detail) return;\n      setColorScheme(evt.detail, true);\n    });\n  }\n\n  const colorScheme = computed(() => {\n    // Global override\n    if (globalOverride.value) return globalOverride.value;\n\n    if (userPreference.value !== \"system\") {\n      return userPreference.value;\n    }\n    return prefersDark.value ? \"dark\" : \"light\";\n  });\n\n  return {\n    prefersDark,\n    colorScheme,\n    setColorScheme,\n    userPreference,\n    globalOverride,\n  };\n};\n"],"names":["prefersDark","ref","userPreference","listenersMounted","mediaQuery","appStore","updateColorScheme","isDarkMode","globalOverride","setColorScheme","newScheme","dontDispatchChange","themeUpdateEvent","setupColorScheme","computed","useAppStore","isOverride","_b","_a","useColorScheme","evt","colorScheme"],"mappings":"sDAGA,MAAMA,EAAcC,EAAI,EAAK,EACvBC,EAAiBD,EAAI,QAAQ,EAC7BE,EAAmBF,EAAI,EAAK,EAClC,IAAIG,EAAa,KACbC,EAEJ,MAAMC,EAAoB,IAAM,CAC9B,MAAMC,EAAaL,EAAe,QAAU,QAAWA,EAAe,QAAU,UAAY,OAAO,WAAW,8BAA8B,EAAE,QAE9IF,EAAY,MAAQQ,EAAe,OAAS,OAAS,GAAOD,CAC9D,EAEME,EAAiB,CAACC,EAAWC,IAAuB,CACxD,GAAI,CAAC,QAAS,OAAQ,QAAQ,EAAE,SAASD,CAAS,IAChDR,EAAe,MAAQQ,EACvB,aAAa,QAAQ,aAAcA,CAAS,EAC5CJ,EAAiB,EAGb,CAACK,GAAoB,CACvB,MAAMC,EAAmB,IAAI,YAAY,oBAAqB,CAAE,OAAQF,EAAW,EACnF,SAAS,cAAcE,CAAgB,CAC7C,CAEA,EAEaC,EAAmB,IAAM,CACpCX,EAAe,MAAQ,aAAa,QAAQ,YAAY,GAAK,SAC7DI,EAAiB,EAEb,OAAO,aACTF,EAAa,OAAO,WAAW,8BAA8B,EAC7DA,EAAW,iBAAiB,SAAUE,CAAiB,EAE3D,EAQME,EAAiBM,EAAS,IAAM,SAC/BT,IACHA,EAAWU,EAAW,GAGxB,MAAMC,GAAaC,GAAAC,EAAAb,GAAA,YAAAA,EAAU,QAAV,YAAAa,EAAiB,oBAAjB,YAAAD,EAAoC,mBAEvD,OAAOD,GAAc,OAAS,CAACA,EAAa,GAAQA,CACtD,CAAC,EAEYG,EAAiB,IAAM,CAC7BhB,EAAiB,QACpBA,EAAiB,MAAQ,GACzB,SAAS,iBAAiB,oBAAsBiB,GAAQ,CACjDA,EAAI,QACTX,EAAeW,EAAI,OAAQ,EAAI,CACrC,CAAK,GAGH,MAAMC,EAAcP,EAAS,IAEvBN,EAAe,MAAcA,EAAe,MAE5CN,EAAe,QAAU,SACpBA,EAAe,MAEjBF,EAAY,MAAQ,OAAS,OACrC,EAED,MAAO,CACL,YAAAA,EACA,YAAAqB,EACA,eAAAZ,EACA,eAAAP,EACA,eAAAM,CACJ,CACA"}