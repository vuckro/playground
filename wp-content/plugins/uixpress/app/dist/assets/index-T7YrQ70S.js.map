{"version":3,"file":"index-T7YrQ70S.js","sources":["../../src/assets/js/functions/returnStatusType.js","../../src/components/app/batch-options/index.vue"],"sourcesContent":["/**\n * Returns the status type for ls items\n *\n * @param {string} status - The status to be mapped\n * @returns {string} The corresponding status type\n */\nexport const returnStatusType = (status) => {\n  const statusMap = {\n    completed: \"success\",\n    refunded: \"warning\",\n    on_trial: \"success\",\n    cancelled: \"danger\",\n    past_due: \"warning\",\n    failed: \"danger\",\n    unpaid: \"danger\",\n    paid: \"success\",\n    subscribed: \"success\",\n    inactive: \"default\",\n    expired: \"danger\",\n    active: \"success\",\n    published: \"success\",\n    draft: \"warning\",\n    processing: \"default\",\n    instock: \"success\",\n    onbackorder: \"warning\",\n    outofstock: \"danger\",\n    publish: \"success\",\n  };\n\n  return statusMap[status.toLowerCase()] || \"default\";\n};\n","<script setup>\nimport { ref, computed, defineProps, defineEmits, defineModel, useSlots } from \"vue\";\n\n\nimport AppButton from \"@/components/utility/app-button/index.vue\";\nimport AppIcon from \"@/components/utility/icons/index.vue\";\nimport ContextMenu from \"@/components/utility/context-menu/index.vue\";\nimport Multiselect from \"@/components/utility/select/index.vue\";\nimport Confirm from \"@/components/utility/confirm/index.vue\";\n\n// Functions\nimport { lmnFetch } from \"@/assets/js/functions/lmnFetch.js\";\nimport { notify } from \"@/assets/js/functions/notify.js\";\n\nconst contextmenu = ref(null);\nconst slots = useSlots();\nconst statuses = ref([]);\nconst newStatus = ref(null);\nconst selected = defineModel();\nconst emit = defineEmits([\"updated\"]);\nconst confirm = ref(null);\nconst props = defineProps([\"route\"]);\nconst trigger = ref(null);\n\nconst openActionsList = async (evt) => {\n  contextmenu.value.show(evt, returnThisPos());\n};\n\n/**\n * Returns postition of current target\n *\n * @since 0.0.1\n */\nconst returnThisPos = (evt) => {\n  const target = trigger.value;\n  const rect = target.getBoundingClientRect();\n  return { clientY: rect.bottom + 10, clientX: rect.left };\n};\n\nconst batchDelete = async (evt) => {\n  // Confirm user intent\n  const userResponse = await confirm.value.show({\n    title: __(\"Are you sure?\", \"uixpress\"),\n    message: __(\"Are you sure you want to delete these items? This action cannot be undone.\", \"uixpress\"),\n    okButton: __(\"Yes delete them\", \"uixpress\"),\n  });\n\n  // Bailed by user\n  if (!userResponse) return;\n\n  contextmenu.value.close();\n\n  for (let selectedItem of selected.value) {\n    const args = { endpoint: `${props.route}/${selectedItem}`, params: { force: true }, type: \"DELETE\" };\n    const response = await lmnFetch(args);\n  }\n\n  notify({ type: \"success\", title: __(\"Selection deleted\", \"uixpress\") });\n\n  emit(\"updated\");\n\n  selected.value = [];\n};\n</script>\n\n<template>\n  <div ref=\"trigger\">\n    <AppButton type=\"default\" @click=\"openActionsList\" class=\"text-sm\">\n      <div class=\"flex flex-row gap-2 items-center\">\n        <AppIcon icon=\"stacks\" />\n        <span>{{ __(\"Bulk options\", \"uixpress\") }}</span>\n      </div>\n    </AppButton>\n  </div>\n  <ContextMenu ref=\"contextmenu\">\n    <div class=\"flex flex-col w-60 gap-3 p-2\">\n      <slot />\n      <div class=\"border-t border-zinc-200 dark:border-zinc-700\" v-if=\"slots.default\"></div>\n\n      <AppButton type=\"danger\" @click=\"batchDelete\">\n        <span>{{ __(\"Delete selected\", \"uixpress\") }}</span>\n      </AppButton>\n    </div>\n  </ContextMenu>\n  <Confirm ref=\"confirm\" />\n</template>\n"],"names":["returnStatusType","status","contextmenu","ref","slots","useSlots","selected","_useModel","emit","__emit","confirm","props","__props","trigger","openActionsList","evt","returnThisPos","rect","batchDelete","selectedItem","args","lmnFetch","notify","_createElementVNode","_createVNode","AppButton","_hoisted_1","AppIcon","__","ContextMenu","_hoisted_2","_renderSlot","_ctx","_unref","_openBlock","_createElementBlock","_hoisted_3","Confirm"],"mappings":"2OAMY,MAACA,EAAoBC,IACb,CAChB,UAAW,UACX,SAAU,UACV,SAAU,UACV,UAAW,SACX,SAAU,UACV,OAAQ,SACR,OAAQ,SACR,KAAM,UACN,WAAY,UACZ,SAAU,UACV,QAAS,SACT,OAAQ,UACR,UAAW,UACX,MAAO,UACP,WAAY,UACZ,QAAS,UACT,YAAa,UACb,WAAY,SACZ,QAAS,SACb,GAEmBA,EAAO,YAAW,CAAE,GAAK,oSCf5C,MAAMC,EAAcC,EAAI,IAAI,EACtBC,EAAQC,EAAA,EACGF,EAAI,CAAA,CAAE,EACLA,EAAI,IAAI,EAC1B,MAAMG,EAAWC,gBAAY,EACvBC,EAAOC,EACPC,EAAUP,EAAI,IAAI,EAClBQ,EAAQC,EACRC,EAAUV,EAAI,IAAI,EAElBW,EAAkB,MAAOC,GAAQ,CACrCb,EAAY,MAAM,KAAKa,EAAKC,EAAA,CAAe,CAAA,EAQvCA,EAAiBD,GAAQ,CAE7B,MAAME,EADSJ,EAAQ,MACH,sBAAA,EACpB,MAAO,CAAE,QAASI,EAAK,OAAS,GAAI,QAASA,EAAK,IAAA,CAAK,EAGnDC,EAAc,MAAOH,GAAQ,CASjC,GAPqB,MAAML,EAAQ,MAAM,KAAK,CAC5C,SAAO,OAAA,GAAA,KAAA,IAAG,gBAAiB,UAAU,EACrC,WAAS,OAAA,GAAA,KAAA,IAAG,6EAA8E,UAAU,EACpG,YAAU,OAAA,GAAA,KAAA,IAAG,kBAAmB,UAAU,CAAA,CAC3C,EAKD,CAAAR,EAAY,MAAM,MAAA,EAElB,QAASiB,KAAgBb,EAAS,MAAO,CACvC,MAAMc,EAAO,CAAE,SAAU,GAAGT,EAAM,KAAK,IAAIQ,CAAY,GAAI,OAAQ,CAAE,MAAO,EAAA,EAAQ,KAAM,QAAA,EACzE,MAAME,EAASD,CAAI,CAAA,CAGtCE,EAAO,CAAE,KAAM,UAAW,SAAO,mBAAG,oBAAqB,UAAU,EAAG,EAEtEd,EAAK,SAAS,EAEdF,EAAS,MAAQ,CAAA,EAAC,8BAKlBiB,EAOM,MAAA,SAPG,UAAJ,IAAIV,CAAA,GACPW,EAKYC,EAAA,CALD,KAAK,UAAW,QAAOX,EAAiB,MAAM,SAAA,aACvD,IAGM,CAHNS,EAGM,MAHNG,EAGM,CAFJF,EAAyBG,EAAA,CAAhB,KAAK,SAAQ,EACtBJ,EAAiD,cAAxCK,EAAAA,GAAE,eAAA,UAAA,CAAA,EAAA,CAAA,CAAA,iBAIjBJ,EAScK,EAAA,SATG,cAAJ,IAAI3B,CAAA,aACf,IAOM,CAPNqB,EAOM,MAPNO,EAOM,CANJC,EAAQC,EAAA,OAAA,SAAA,EACyDC,EAAA7B,CAAA,EAAM,SAAvE8B,EAAA,EAAAC,EAAsF,MAAtFC,CAAsF,YAEtFZ,EAEYC,EAAA,CAFD,KAAK,SAAU,QAAOP,CAAA,aAC/B,IAAoD,CAApDK,EAAoD,cAA3CK,EAAAA,GAAE,kBAAA,UAAA,CAAA,EAAA,CAAA,CAAA,uBAIjBJ,EAAyBa,EAAA,SAAZ,UAAJ,IAAI3B,CAAA"}