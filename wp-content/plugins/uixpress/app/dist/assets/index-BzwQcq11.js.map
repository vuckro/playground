{"version":3,"file":"index-BzwQcq11.js","sources":["../../src/components/utility/notifications/index.vue","../../src/components/utility/loading-indicator/loading-indicator.ts","../../src/components/utility/loading-indicator/index.ts"],"sourcesContent":["<script setup>\nimport { ref } from \"vue\";\n\n// Get noti store\nimport { useNotificationStore } from \"@/store/notifications/notifications.js\";\nconst notificationsStore = useNotificationStore();\n\n// Import icons\nimport AppIcon from \"@/components/utility/icons/index.vue\";\n\n/**\n * Returns bg color of icon\n */\nconst returnTickClass = (type) => {\n  if (type === \"success\") return \"bg-green-300/20 text-green-300 border-green-300/40\";\n  if (type === \"warning\") return \"bg-orange-300/20 text-orange-300 border-orange-300/40\";\n  if (type === \"error\") return \"bg-red-300/20 text-red-400 border-red-300/40\";\n  return \"bg-indigo-300/20 text-indigo-300 border-indigo-300/40\";\n};\n/**\n * Returns bg color of icon\n */\nconst returnIcon = (type) => {\n  if (type === \"success\") return \"tick\";\n  if (type === \"warning\") return \"warning\";\n  if (type === \"error\") return \"error\";\n  return \"warning\";\n};\n</script>\n\n<style scoped>\n.notiitem-enter-active,\n.notiitem-leave-active {\n  transition: all 0.3s ease-in-out;\n}\n.notiitem-enter-from,\n.notiitem-leave-to {\n  opacity: 0;\n  transform: translateX(30px);\n}\n</style>\n\n<template>\n  <TransitionGroup tag=\"div\" name=\"notiitem\" class=\"fixed top-0 right-0 w-80 flex flex-col z-[999999] pointer-events-auto\">\n    <div\n      v-for=\"(noti, index) in notificationsStore.getAll\"\n      class=\"flex flex-row gap-4 items-center w-auto bg-zinc-950/80 text-zinc-100 shadow-lg rounded-2xl border border-zinc-800 p-3 mt-4 mr-4 backdrop-blur-md\"\n      :key=\"noti.id\"\n    >\n      <div class=\"transition-all hover:bg-zinc-300 rounded-xl p-1 aspect-square border w-auto\" :class=\"returnTickClass(noti.type)\"><AppIcon :icon=\"returnIcon(noti.type)\" /></div>\n      <div class=\"flex flex-col flex-grow\">\n        <div class=\"text-sm\" v-html=\"noti.title\"></div>\n        <div class=\"text-zinc-400 text-xs\" v-html=\"noti.message\"></div>\n      </div>\n      <!-- Loader-->\n      <div v-if=\"noti.loader\" class=\"transition-all hover:bg-zinc-100 rounded-xl p-2 aspect-square w-auto text-zinc-400 hover:text-zinc-600 cursor-pointer\">\n        <svg class=\"animate-spin h-5 w-5 text-indigo-600\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n          <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n          <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n        </svg>\n      </div>\n      <!-- Close-->\n      <div\n        v-if=\"noti.dismissable && !noti.loader\"\n        @click=\"notificationsStore.remove(index)\"\n        class=\"transition-all hover:bg-zinc-700 rounded-xl p-2 aspect-square w-auto text-zinc-400 hover:text-zinc-100 cursor-pointer\"\n      >\n        <AppIcon icon=\"close\" />\n      </div>\n    </div>\n  </TransitionGroup>\n\n  <component is=\"style\">\n    .notiitem-enter-active, .notiitem-leave-active { transition: all 0.3s ease-in-out; } .notiitem-enter-from, .notiitem-leave-to { opacity: 0; transform: translateX(30px); }\n  </component>\n</template>\n","import { computed, getCurrentScope, onScopeDispose, ref } from \"vue\";\nimport type { Ref } from \"vue\";\n\nexport type LoadingIndicatorOpts = {\n  /** @default 2000 */\n  duration: number;\n  /** @default 200 */\n  throttle: number;\n  /** @default 500 */\n  hideDelay: number;\n  /** @default 400 */\n  resetDelay: number;\n  /**\n   * You can provide a custom function to customize the progress estimation,\n   * which is a function that receives the duration of the loading bar (above)\n   * and the elapsed time. It should return a value between 0 and 100.\n   */\n  estimatedProgress?: (duration: number, elapsed: number) => number;\n};\n\nexport type LoadingIndicator = {\n  _cleanup: () => void;\n  progress: Ref<number>;\n  isLoading: Ref<boolean>;\n  start: () => void;\n  set: (value: number) => void;\n  finish: (opts?: { force?: boolean }) => void;\n  clear: () => void;\n};\n\nfunction defaultEstimatedProgress(duration: number, elapsed: number): number {\n  const completionPercentage = (elapsed / duration) * 100;\n  return (2 / Math.PI) * 100 * Math.atan(completionPercentage / 50);\n}\n\nfunction createLoadingIndicator(opts: Partial<LoadingIndicatorOpts> = {}) {\n  const { duration = 2000, throttle = 200, hideDelay = 500, resetDelay = 400 } = opts;\n  const getProgress = opts.estimatedProgress || defaultEstimatedProgress;\n  const progress = ref(0);\n  const isLoading = ref(false);\n  let done = false;\n  let rafId: number;\n\n  let throttleTimeout: number | NodeJS.Timeout;\n  let hideTimeout: number | NodeJS.Timeout;\n  let resetTimeout: number | NodeJS.Timeout;\n\n  const start = () => set(0);\n\n  function set(at = 0) {\n    if (at >= 100) {\n      return finish();\n    }\n    clear();\n    progress.value = at < 0 ? 0 : at;\n    if (throttle) {\n      throttleTimeout = setTimeout(() => {\n        isLoading.value = true;\n        _startProgress();\n      }, throttle);\n    } else {\n      isLoading.value = true;\n      _startProgress();\n    }\n  }\n\n  function _hide() {\n    hideTimeout = setTimeout(() => {\n      isLoading.value = false;\n      resetTimeout = setTimeout(() => {\n        progress.value = 0;\n      }, resetDelay);\n    }, hideDelay);\n  }\n\n  function finish(opts: { force?: boolean } = {}) {\n    progress.value = 100;\n    done = true;\n    clear();\n    _clearTimeouts();\n    if (opts.force) {\n      progress.value = 0;\n      isLoading.value = false;\n    } else {\n      _hide();\n    }\n  }\n\n  function _clearTimeouts() {\n    clearTimeout(hideTimeout);\n    clearTimeout(resetTimeout);\n  }\n\n  function clear() {\n    clearTimeout(throttleTimeout);\n    cancelAnimationFrame(rafId);\n  }\n\n  function _startProgress() {\n    done = false;\n    let startTimeStamp: number;\n\n    function step(timeStamp: number): void {\n      if (done) {\n        return;\n      }\n\n      startTimeStamp ??= timeStamp;\n      const elapsed = timeStamp - startTimeStamp;\n      progress.value = Math.max(0, Math.min(100, getProgress(duration, elapsed)));\n\n      rafId = requestAnimationFrame(step);\n    }\n\n    rafId = requestAnimationFrame(step);\n  }\n\n  let _cleanup = () => {};\n  _cleanup = () => {\n    unsubError();\n    unsubLoadingStartHook();\n    unsubLoadingFinishHook();\n    clear();\n  };\n\n  return {\n    _cleanup,\n    progress: computed(() => progress.value),\n    isLoading: computed(() => isLoading.value),\n    start,\n    set,\n    finish,\n    clear,\n  };\n}\n\n/**\n * composable to handle the loading state of the page\n * @since 3.9.0\n */\nexport function useLoadingIndicator(opts: Partial<LoadingIndicatorOpts> = {}): Omit<LoadingIndicator, \"_cleanup\"> {\n  // Initialise global loading indicator if it doesn't exist already\n  const indicator = createLoadingIndicator(opts);\n\n  return indicator;\n}\n","import { defineComponent, h, watch, onMounted, nextTick } from \"vue\";\nimport { useLoadingIndicator } from \"./loading-indicator.ts\";\nimport { useAppStore } from \"@/store/app/app.js\";\n\nexport default defineComponent({\n  name: \"NuxtLoadingIndicator\",\n  props: {\n    throttle: {\n      type: Number,\n      default: 200,\n    },\n    duration: {\n      type: Number,\n      default: 2000,\n    },\n    height: {\n      type: Number,\n      default: 3,\n    },\n    color: {\n      type: [String, Boolean],\n      default: \"repeating-linear-gradient(to right, rgb(var(--uix-accent-600) / 1) 0%, rgb(var(--uix-accent-400) / 1) 50%, rgb(var(--uix-accent-300) / 1) 100%)\",\n    },\n    estimatedProgress: {\n      type: Function as unknown as () => (duration: number, elapsed: number) => number,\n      required: false,\n    },\n  },\n  setup(props, { slots, expose }) {\n    const { progress, isLoading, start, finish, clear } = useLoadingIndicator({\n      duration: props.duration,\n      throttle: props.throttle,\n      estimatedProgress: props.estimatedProgress,\n    });\n\n    const appStore = useAppStore();\n\n    watch(\n      () => appStore.state.loading,\n      () => {\n        if (appStore.state.loading) {\n          start();\n\n          // Add a timeout to finish loading\n          setTimeout(() => {\n            if (isLoading.value) {\n              //finish();\n            }\n          }, 2000);\n        } else {\n          finish();\n        }\n      }\n    );\n\n    expose({\n      progress,\n      isLoading,\n      start,\n      finish,\n      clear,\n    });\n\n    return () =>\n      h(\n        \"div\",\n        {\n          class: \"loading-indicator\",\n          style: {\n            position: \"fixed\",\n            top: 0,\n            right: 0,\n            left: 0,\n            pointerEvents: \"none\",\n            width: \"auto\",\n            height: `${props.height}px`,\n            opacity: isLoading.value ? 1 : 0,\n            background: props.color || undefined,\n            backgroundSize: `${(100 / progress.value) * 100}% auto`,\n            transform: `scaleX(${progress.value}%)`,\n            transformOrigin: \"left\",\n            transition: \"transform 0.1s, height 0.4s, opacity 0.4s\",\n            zIndex: 9999999,\n          },\n        },\n        slots\n      );\n  },\n});\n"],"names":["notificationsStore","useNotificationStore","returnTickClass","type","returnIcon","_createVNode","_TransitionGroup","_openBlock","_createElementBlock","_Fragment","_unref","noti","index","_createElementVNode","AppIcon","_hoisted_1","_hoisted_4","_cache","$event","_createBlock","_resolveDynamicComponent","defaultEstimatedProgress","duration","elapsed","completionPercentage","createLoadingIndicator","opts","throttle","hideDelay","resetDelay","getProgress","progress","ref","isLoading","done","rafId","throttleTimeout","hideTimeout","resetTimeout","start","set","at","finish","clear","_startProgress","_hide","_clearTimeouts","startTimeStamp","step","timeStamp","_cleanup","computed","useLoadingIndicator","LoadingIndicator","defineComponent","props","slots","expose","appStore","useAppStore","watch","h"],"mappings":"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"}