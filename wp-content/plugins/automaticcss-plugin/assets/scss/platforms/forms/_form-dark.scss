@if $option-forms == on {
  @if $option-ws-form == on {
    // WS FORM
    .form--dark .wsf-form {
      input[type="date"].wsf-field,
      input[type="datetime-local"].wsf-field,
      input[type="file"].wsf-field,
      input[type="month"].wsf-field,
      input[type="password"].wsf-field,
      input[type="search"].wsf-field,
      input[type="time"].wsf-field,
      input[type="week"].wsf-field,
      input[type="email"].wsf-field,
      input[type="number"].wsf-field,
      input[type="tel"].wsf-field,
      input[type="text"].wsf-field,
      input[type="url"].wsf-field,
      select.wsf-field:not([multiple]):not([size]),
			select.wsf-field ~ .select2-container .select2-selection {
        // height: #{$f-input-height}rem;
				height: var(--f-input-height, #{$f-input-height}rem);
      }

      input[type="date"].wsf-field,
      input[type="datetime-local"].wsf-field,
      input[type="file"].wsf-field,
      input[type="month"].wsf-field,
      input[type="password"].wsf-field,
      input[type="search"].wsf-field,
      input[type="time"].wsf-field,
      input[type="week"].wsf-field,
      input[type="email"].wsf-field,
      input[type="number"].wsf-field,
      input[type="tel"].wsf-field,
      input[type="text"].wsf-field,
      input[type="url"].wsf-field,
      select.wsf-field,
      select.wsf-field:not([multiple]):not([size]),
			select.wsf-field ~ .select2-container .select2-selection,
			textarea.wsf-field {
        @include f-input-style('dark');
      }

      .wsf-grid {
        margin-inline: calc(-1 * calc(var(--f-grid-gutter, #{$f-grid-gutter}) / 2));
      }

      [data-type="texteditor"] {
        color: var(--f-dark-input-text-color, #{$f-dark-input-text-color});
        font-size: var(--f-input-size, --text-m);
        font-weight: var(--f-input-font-weight, #{$f-input-font-weight});
        line-height: var(--f-input-line-height, #{$f-input-line-height});

        // smart spacing
        * + :is(h1, h2, h3, h4, h5, h6) {
          margin-block-start: var(--heading-spacing);
        }

        * + p {
          margin-block-start: var(--paragraph-spacing);
        }

        * + ul,
        * + ol {
          margin-block-start: var(--list-spacing);
        }

        * + li {
          margin-block-start: var(--list-item-spacing);
        }
      }

      [data-type="html"] {
        color: var(--f-dark-label-text-color, #{$f-dark-label-text-color});
      }

      select.wsf-field {
        &:not([multiple]):not([size]) {
          padding-inline-end: calc(20px + var(--f-input-padding-x, #{$f-input-padding-x}));
          &:not(:has(+ span)) {
						@include f-select-arrow-style('dark');
					}
        }
        &:invalid {
          color: hsl(
            var(--f-dark-input-placeholder-hsl, #{$f-dark-input-placeholder-hsl}) / var(--f-dark-input-placeholder-opacity, #{$f-dark-input-placeholder-opacity})
          ) !important;
        }
      }

			select.wsf-field:not([multiple]):not([size]):not([data-wsf-select2])+span.wsf-select-arrow {
				border-color: var(--f-dark-select-arrow-color, #{$f-dark-select-arrow-color}) transparent transparent transparent;
				right: calc(20px + var(--f-input-padding-x, #{$f-input-padding-x}));
			}

			// Select2

			select.wsf-field ~ .select2-container .select2-selection {
				&--single .select2-selection__rendered,
				&--single .select2-selection__placeholder,
				.select2-search--inline .select2-search__field,
				input.select2-search__field::placeholder {
					color: var(--f-dark-input-text-color, #{$f-dark-input-text-color});
					font-size: var(--f-input-size, --text-m);
					font-weight: var(--f-input-font-weight, #{$f-input-font-weight});
					line-height: var(--f-input-line-height, #{$f-input-line-height});
				}
			}

			.wsf-select2-dropdown .select2-results .select2-results__option {
				border-top: 1px solid var(--f-dark-input-border-color, #{$f-dark-input-border-color});
				font-size: var(--f-input-size, --text-m);
				&--highlighted[aria-selected] {
					background-color: var(--f-dark-input-background, #{$f-dark-input-background});;
    			color: var(--f-dark-input-text-color, #{$f-dark-input-text-color});;
				}
			}


      // invalid -> uses Contextual Danger color

      &.wsf-validated select.wsf-field:not([multiple]):not([size]):invalid,
      &.wsf-validated input[type="date"].wsf-field:invalid,
      &.wsf-validated input[type="datetime-local"].wsf-field:invalid,
      &.wsf-validated input[type="file"].wsf-field:invalid,
      &.wsf-validated input[type="month"].wsf-field:invalid,
      &.wsf-validated input[type="password"].wsf-field:invalid,
      &.wsf-validated input[type="search"].wsf-field:invalid,
      &.wsf-validated input[type="time"].wsf-field:invalid,
      &.wsf-validated input[type="week"].wsf-field:invalid,
      &.wsf-validated input[type="email"].wsf-field:invalid,
      &.wsf-validated input[type="number"].wsf-field:invalid,
      &.wsf-validated input[type="tel"].wsf-field:invalid,
      &.wsf-validated input[type="text"].wsf-field:invalid,
      &.wsf-validated input[type="url"].wsf-field:invalid,
      &.wsf-validated select.wsf-field:invalid,
      &.wsf-validated textarea.wsf-field:invalid {
        border-color: hsl(var(--danger-h, #{$danger-h}) var(--danger-s, #{$danger-s}) var(--danger-l, #{$danger-l}));
				color: hsl(var(--danger-h, #{$danger-h}) var(--danger-s, #{$danger-s}) var(--danger-l, #{$danger-l}));
      }

      .wsf-invalid-feedback {
        color: hsl(var(--danger-h, #{$danger-h}) var(--danger-s, #{$danger-s}) var(--danger-l, #{$danger-l}));
      }

      .iti--allow-dropdown input,
      .iti--allow-dropdown input[type="tel"],
      .iti--allow-dropdown input[type="text"],
      .iti--separate-dial-code input,
      .iti--separate-dial-code input[type="tel"],
      .iti--separate-dial-code input[type="text"] {
        @if $f-input-padding-x == 0 {
          padding-inline-start: calc(4.8rem + 0px);
        } @else {
          //padding-inline-start: calc(4.8rem + var(--f-input-padding-x, #{$f-input-padding-x}));
					padding-inline-start: calc(4.8rem + 6px);
        }
      }
      //Input Placeholder

      input.wsf-field::placeholder,
      textarea.wsf-field::placeholder {
        color: var(--f-dark-input-placeholder-color, #{$f-dark-input-placeholder-color});
        opacity: var(--f-dark-input-placeholder-opacity, #{$f-dark-input-placeholder-opacity});
				transition: var(--transition-duration) var(--transition-timing) var(--transition-delay);
			}

			input.wsf-field:hover::placeholder,
			textarea.wsf-field:hover::placeholder {
				color: var(--f-dark-input-placeholder-color-hover, #{$f-dark-input-placeholder-color-hover});
			}

      // Labels

      label.wsf-label,
      label {
        @include f-label-style('dark');
      }

      // Label Position Inside Styling

      .wsf-label-position-inside input.wsf-field[placeholder] + label, .wsf-label-position-inside input.wsf-field[placeholder] + .wsf-input-group-append + label {
        @include f-label-style('dark');
        top: calc(var(--f-input-height, #{$f-input-height}rem) / 2);
        transform: translateY(-50%);
        transition: all 0.3s ease;
				background-color: var(--f-dark-label-inside-background-color, #{$f-dark-label-inside-background-color});

        @if $f-input-padding-x == 0 {
          left: calc(calc(var(--f-grid-gutter, #{$f-grid-gutter}) / 2) + 0px);
        } @else {
          left: calc(calc(var(--f-grid-gutter, #{$f-grid-gutter}) / 2) + var(--f-input-padding-x, #{$f-input-padding-x}));
        }
      }

			// Label position inside hover
			.wsf-label-position-inside input.wsf-field[placeholder]:hover:placeholder-shown:not(:focus) + label,
			.wsf-label-position-inside input.wsf-field[placeholder]:hover:not(:focus):placeholder-shown + label,
			.wsf-label-position-inside input.wsf-field[placeholder]:hover:placeholder-shown:not(:focus) + .wsf-input-group-append + label,
			.wsf-label-position-inside input.wsf-field[placeholder]:hover:not(:focus):placeholder-shown + .wsf-input-group-append + label,
			.wsf-label-position-inside textarea.wsf-field[placeholder]:hover:placeholder-shown:not(:focus) + label,
			.wsf-label-position-inside textarea.wsf-field[placeholder]:hover:not(:focus):placeholder-shown + label,
			.wsf-label-position-inside textarea.wsf-field[placeholder]:hover:placeholder-shown:not(:focus) + .wsf-input-group-append + label,
			.wsf-label-position-inside textarea.wsf-field[placeholder]:hover:not(:focus):placeholder-shown + .wsf-input-group-append + label {
				color: var(--f-dark-input-placeholder-color-hover, #{$f-dark-input-placeholder-color-hover});
			}

      .wsf-label-position-inside textarea.wsf-field[placeholder] + label, .wsf-label-position-inside textarea.wsf-field[placeholder] + .wsf-input-group-append + label {
        @include f-label-style('dark');
				top: calc(var(--f-input-height, #{$f-input-height}rem) / 2);
        transform: translateY(-50%);
				transition: all 0.3s ease;
				background-color: var(--f-dark-label-inside-background-color, #{$f-dark-label-inside-background-color});
        @if $f-input-padding-x == 0 {
          left: calc(calc(var(--f-grid-gutter, #{$f-grid-gutter}) / 2) + 0px);
        } @else {
          left: calc(calc(var(--f-grid-gutter, #{$f-grid-gutter}) / 2) + #{$f-input-padding-x});
        }
        // top: calc(10px + var(--f-input-padding-y, #{$f-input-padding-y}));
				transition: var(--transition-duration) var(--transition-timing) var(--transition-delay);

				&:hover {
					color: var(--f-dark-input-placeholder-color-hover, #{$f-dark-input-placeholder-color-hover});
				}
      }

      .wsf-label-position-inside input.wsf-field[placeholder]:focus + label,
			.wsf-label-position-inside input.wsf-field[placeholder]:not(:placeholder-shown) + label,
			.wsf-label-position-inside input.wsf-field[placeholder]:focus + .wsf-input-group-append + label,
      .wsf-label-position-inside input.wsf-field[placeholder]:not(:placeholder-shown) + .wsf-input-group-append + label {
				top: var(--f-label-inside-position-top, #{$f-label-inside-position-top});
				left: var(--f-label-inside-position-left, #{$f-label-inside-position-left});
				scale: var(--f-label-inside-scale, #{$f-label-inside-scale});
				background-color: var(--f-dark-label-inside-background-color-focus, #{$f-dark-label-inside-background-color-focus});
        // @if $f-input-padding-x == 0 {
        //   left: calc(calc(var(--f-grid-gutter, #{$f-grid-gutter}) / 2) + 0px);
        // } @else {
        //   left: calc(calc(var(--f-grid-gutter, #{$f-grid-gutter}) / 2) + var(--f-input-padding-x, #{$f-input-padding-x}));
        // }
      }

      .wsf-label-position-inside textarea.wsf-field[placeholder]:focus + label,
			.wsf-label-position-inside textarea.wsf-field[placeholder]:focus + .wsf-input-group-append + label,
      .wsf-label-position-inside textarea.wsf-field[placeholder]:not(:placeholder-shown) + label,
      .wsf-label-position-inside textarea.wsf-field[placeholder]:not(:placeholder-shown) + .wsf-input-group-append + label {
				top: var(--f-label-inside-position-top, #{$f-label-inside-position-top});
				left: var(--f-label-inside-position-left, #{$f-label-inside-position-left});
				scale: var(--f-label-inside-scale, #{$f-label-inside-scale});
				background-color: var(--f-dark-label-inside-background-color-focus, #{$f-dark-label-inside-background-color-focus});
        // @if $f-input-padding-x == 0 {
        //   left: calc(calc(var(--f-grid-gutter, #{$f-grid-gutter}) / 2) + 0px);
        // } @else {
        //   left: calc(calc(var(--f-grid-gutter, #{$f-grid-gutter}) / 2) + var(--f-input-padding-x, #{$f-input-padding-x}));
        // }
      }

      .wsf-label-position-inside input.wsf-field[placeholder]:placeholder-shown + label,
      .wsf-label-position-inside input.wsf-field[placeholder]:placeholder-shown + .wsf-input-group-append + label,
			.wsf-label-position-inside textarea.wsf-field[placeholder]:placeholder-shown + label {
        opacity: var(--f-dark-input-placeholder-opacity, #{$f-dark-input-placeholder-opacity});
      }

      .wsf-label-position-inside input.wsf-field[placeholder]:focus:placeholder-shown + label,
      .wsf-label-position-inside input.wsf-field[placeholder]:focus:placeholder-shown + .wsf-input-group-append + label,
			.wsf-label-position-inside textarea.wsf-field[placeholder]:focus:placeholder-shown + label {
				background-color: var(--f-dark-label-inside-background-color-focus, #{$f-dark-label-inside-background-color-focus});
        opacity: 1;
      }

      .wsf-label-position-inside {
        & .iti--allow-dropdown input + label,
        .iti--allow-dropdown input[type="tel"] + label,
        .iti--allow-dropdown input[type="text"] + label,
        .iti--separate-dial-code input + label,
        .iti--separate-dial-code input[type="tel"] + label,
        .iti--separate-dial-code input[type="text"] + label {
          @if $f-input-padding-x == 0 {
            left: calc(4.8rem + 0px);
          } @else {
            left: calc(4.8rem + var(--f-input-padding-x, #{$f-input-padding-x}));
          }
        }
      }

      .wsf-label-position-inside
        .iti
        input.wsf-field[placeholder]:focus
        + label {
					background-color: var(--f-dark-label-inside-background-color, #{$f-dark-label-inside-background-color});
					opacity: 1;
					transform: translate(0px, -50%) scale(0.9);
					top: 0;
					@if $f-input-padding-x == 0 {
						left: calc(4.8rem + 0px);
					} @else {
						left: calc(4.8rem + var(--f-input-padding-x, #{$f-input-padding-x}));
					}
      }

			.wsf-label-position-inside select.wsf-field + label {
				background-color: var(--f-dark-label-inside-background-color, #{$f-dark-label-inside-background-color});
			}

      // Button
      button.wsf-button,
      button.wsf-button.wsf-button-primary {
        @if $option-f-use-global-buttons == on {
          @include btn(#{$f-dark-submit-button-style});
        } @else {
					@include f-btn-style('dark');
					min-height: var(--f-input-height, #{$f-input-height}rem);

          &:hover {
            background-color: var(--f-dark-btn-background-hover, #{$f-dark-btn-background-hover});
            color: var(--f-dark-btn-text-color-hover, #{$f-dark-btn-text-color-hover});
            border-color: var(--f-dark-btn-border-color-hover, #{$f-dark-btn-border-color-hover});
          }
        }
      }

      // Button > Secondary
      button.wsf-button.wsf-button-secondary {
        @if $option-f-use-global-buttons == on {
          @include btn(#{$f-dark-secondary-button-style});
        } @else {
        background-color: var(--f-dark-secondary-btn-background-color, #{$f-dark-secondary-btn-background-color});
        color: var(--f-dark-secondary-btn-text-color, #{$f-dark-secondary-btn-text-color});
        border-color: var(--f-dark-secondary-btn-background-color, #{$f-dark-secondary-btn-background-color});
        transition: all var(--btn-transition-duration) ease;
          &:hover {
            background-color: var(--f-dark-secondary-btn-background-color-hover, #{$f-dark-secondary-btn-background-color-hover});
            color: var(--f-dark-secondary-btn-text-color-hover, #{$f-dark-secondary-btn-text-color-hover});
            border-color: var(--f-dark-secondary-btn-background-color-hover, #{$f-dark-secondary-btn-background-color-hover});
          }
        }
      }
      // Button > Next
      button.wsf-button[data-action="wsf-tab_next"] {
        @if $option-f-use-global-buttons == on {
          @include btn(#{$f-dark-next-button-style});
        } @else {
        background-color: var(--f-dark-next-btn-background-color, #{$f-dark-next-btn-background-color});
        color: var(--f-dark-next-btn-text-color, #{$f-dark-next-btn-text-color});
        border-color: var(--f-dark-next-btn-background-color, #{$f-dark-next-btn-background-color});
        transition: all var(--btn-transition-duration) ease;
          &:hover {
            background-color: var(--f-dark-next-btn-background-color-hover, #{$f-dark-next-btn-background-color-hover});
            color: var(--f-dark-next-btn-text-color-hover, #{$f-dark-next-btn-text-color-hover});
            border-color: var(--f-dark-next-btn-background-color-hover, #{$f-dark-next-btn-background-color-hover});
          }
        }
      }
      // Button > Previous
      button.wsf-button[data-action="wsf-tab_previous"] {
        @if $option-f-use-global-buttons == on {
          @include btn(#{$f-dark-previous-button-style});
        } @else {
        background-color: var(--f-dark-prev-btn-background-color, #{$f-dark-prev-btn-background-color});
        color: var(--f-dark-prev-btn-text-color, #{$f-dark-prev-btn-text-color});
        border-color: var(--f-dark-prev-btn-background-color, #{$f-dark-prev-btn-background-color});
        transition: all var(--btn-transition-duration) ease;
          &:hover {
            background-color: var(--f-dark-prev-btn-background-color-hover, #{$f-dark-prev-btn-background-color-hover});
            color: var(--f-dark-prev-btn-text-color-hover, #{$f-dark-prev-btn-text-color-hover});
            border-color: var(--f-dark-prev-btn-background-color-hover, #{$f-dark-prev-btn-background-color-hover});
          }
        }
      }
      // Button > Save
      button.wsf-button[data-action="wsf-save"] {
        @if $option-f-use-global-buttons == on {
          @include btn(#{$f-dark-save-button-style});
        } @else {
        background-color: var(--f-dark-save-btn-background-color, #{$f-dark-save-btn-background-color});
        color: var(--f-dark-save-btn-text-color, #{$f-dark-save-btn-text-color});
        border-color: var(--f-dark-save-btn-background-color, #{$f-dark-save-btn-background-color});
        transition: all var(--btn-transition-duration) ease;
          &:hover {
            background-color: var(--f-dark-save-btn-background-color-hover, #{$f-dark-save-btn-background-color-hover});
            color: var(--f-dark-save-btn-text-color-hover, #{$f-dark-save-btn-text-color-hover});
            border-color: var(--f-dark-save-btn-background-color-hover, #{$f-dark-save-btn-background-color-hover});
          }
        }
      }
      // Button > Reset
      button.wsf-button[data-action="wsf-reset"] {
        @if $option-f-use-global-buttons == on {
          @include btn(#{$f-dark-reset-button-style});
        } @else {
        background-color: var(--f-dark-reset-btn-background-color, #{$f-dark-reset-btn-background-color});
        color: var(--f-dark-reset-btn-text-color, #{$f-dark-reset-btn-text-color});
        border-color: var(--f-dark-reset-btn-background-color, #{$f-dark-reset-btn-background-color});
        transition: all var(--btn-transition-duration) ease;
          &:hover {
            background-color: var(--f-dark-reset-btn-background-color-hover, #{$f-dark-reset-btn-background-color-hover});
            color: var(--f-dark-reset-btn-text-color-hover, #{$f-dark-reset-btn-text-color-hover});
            border-color: var(--f-dark-reset-btn-background-color-hover, #{$f-dark-reset-btn-background-color-hover});
          }
        }
      }
      // Button > Clear
      button.wsf-button[data-action="wsf-clear"] {
        @if $option-f-use-global-buttons == on {
          @include btn(#{$f-dark-clear-button-style});
        } @else {
        background-color: var(--f-dark-clear-btn-background-color, #{$f-dark-clear-btn-background-color});
        color: var(--f-dark-clear-btn-text-color, #{$f-dark-clear-btn-text-color});
        border-color: var(--f-dark-clear-btn-background-color, #{$f-dark-clear-btn-background-color});
        transition: all var(--btn-transition-duration) ease;
          &:hover {
            background-color: var(--f-dark-clear-btn-background-color-hover, #{$f-dark-clear-btn-background-color-hover});
            color: var(--f-dark-clear-btn-text-color-hover, #{$f-dark-clear-btn-text-color-hover});
            border-color: var(--f-dark-clear-btn-background-color-hover, #{$f-dark-clear-btn-background-color-hover});
          }
        }
      }

      // Tabs

      //// Tab Group
      ul.wsf-group-tabs {
        background-color: var(--f-dark-tab-group-background-color, #{$f-dark-tab-group-background-color});
        padding: var(--f-tab-group-padding-y, #{$f-tab-group-padding-y}) var(--f-tab-group-padding-x, #{$f-tab-group-padding-x});
        margin-block-end: var(--f-tab-group-margin-bottom, #{$f-tab-group-margin-bottom});

				&:not(.wsf-steps) {
					border-block-end: var(--f-tab-group-border-bottom-size, #{$f-tab-group-border-bottom-size}) var(--f-tab-group-border-bottom-style, #{$f-tab-group-border-bottom-style}) var(--f-dark-tab-group-border-bottom-color, #{$f-dark-tab-group-border-bottom-color}) !important;
				}
      }

      ul.wsf-group-tabs > li {
        width: var(--f-tab-width, #{$f-tab-width});

        &:not(:last-child) {
          margin-inline-end: var(--f-tab-margin-x, #{$f-tab-margin-x});
        }

        > a {
          border: var(--f-tab-border-size, #{$f-tab-border-size})
            var(--f-tab-border-style, #{$f-tab-border-style})
            var(--f-dark-tab-border-color, #{$f-dark-tab-border-color}) !important;
          border-radius: var(--f-tab-border-radius, #{$f-tab-border-radius});
          background-color: var(--f-dark-tab-background-color, #{$f-dark-tab-background-color});
          color: var(--f-dark-tab-text-color, #{$f-dark-tab-text-color});
          font-size: var(--f-tab-text-size, --text-m);
          font-weight: var(--f-tab-text-weight, #{$f-tab-text-weight});
          line-height: var(--f-tab-text-line-height, #{$f-tab-text-line-height});
          padding: var(--f-tab-padding-y, #{$f-tab-padding-y}) var(--f-tab-padding-x, #{$f-tab-padding-x});
          text-align: var(--f-tab-text-align, #{$f-tab-text-align});
          text-decoration: var(--f-tab-text-decoration, #{$f-tab-text-decoration});
          text-transform: var(--f-tab-text-transform, #{$f-tab-text-transform});
          &.wsf-tab-disabled {
            color: var(--f-dark-tab-inactive-text-color, #{$f-dark-tab-inactive-text-color});
          }
        }
      }

      //// Active
      ul.wsf-group-tabs > li.wsf-tab-active {
        > a {
          border: var(--f-tab-active-border-size, #{$f-tab-active-border-size})
            var(--f-tab-active-border-style, #{$f-tab-active-border-style})
            var(--f-dark-tab-active-border-color, #{$f-dark-tab-active-border-color}) !important;
					border-block-end: var(--f-tab-active-border-bottom-size, #{$f-tab-active-border-bottom-size})
						var(--f-tab-active-border-style, #{$f-tab-active-border-style})
						var(--f-dark-tab-active-border-color, #{$f-dark-tab-active-border-color}) !important;
          background-color: var(--f-dark-tab-active-background-color, #{$f-dark-tab-active-background-color}) !important;
          color: var(--f-dark-tab-active-text-color, #{$f-dark-tab-active-text-color}) !important;
          font-weight: var(--f-tab-active-text-weight, #{$f-tab-active-text-weight});

          // ws steps only
          &::before {
            color: var(--f-dark-tab-active-text-color, #{$f-dark-tab-active-text-color}) !important;
          }
        }
      }

			ul.wsf-group-tabs.wsf-steps > li.wsf-tab-active > a {
				border-block-end: none !important;
			}

      ul.wsf-group-tabs.wsf-steps > li > a {
        &::before {
          background-color: var(--f-dark-tab-active-border-color, #{$f-dark-tab-active-border-color});
          border: 1px solid var(--f-dark-tab-active-border-color, #{$f-dark-tab-active-border-color});
        }
        &::after {
          background-color: var(--f-dark-tab-active-border-color, #{$f-dark-tab-active-border-color});
        }
        &:not(.wsf-tab-disabled):focus:before {
          border-color: var(--f-dark-tab-active-border-color, #{$f-dark-tab-active-border-color});
        }
      }

      // Legend
      .wsf-section > legend,
      .wsf-fieldset > legend {
        border: var(--f-legend-border, #{$f-legend-border});
        font-size: var(--f-legend-size, --text-m);
        font-weight: var(--f-legend-text-weight, #{$f-legend-text-weight});
        line-height: var(--f-legend-line-height, #{$f-legend-line-height});
        margin-block-end: var(--f-legend-margin-bottom, #{$f-legend-margin-bottom});
        color: var(--f-dark-legend-text-color, #{$f-dark-legend-text-color});
        padding: 0;
      }

      // Help
      .wsf-help {
        font-size: var(--f-help-size, --text-m);
        font-weight: var(--f-help-text-weight, #{$f-help-text-weight});
        line-height: var(--f-help-line-height, #{$f-help-line-height});
        color: var(--f-dark-help-text-color, #{$f-dark-help-text-color});
				margin-block: var(--f-help-margin-block, #{$f-help-margin-block});

				&-pre {
					margin-block: var(--f-help-margin-block, #{$f-help-margin-block});
				}
      }

      // Fieldset

      .wsf-field-wrapper:not(.wsf-alert) {
        margin-block-end: var(--f-field-margin-bottom, #{$f-field-margin-bottom});
      }

      fieldset {
        &:not(:last-child) {
          margin-block-end: var(--f-fieldset-margin-bottom, #{$f-fieldset-margin-bottom});
        }
      }

      .wsf-tile {
        padding-inline: calc(var(--f-grid-gutter, #{$f-grid-gutter}) / 2);
      }

      // Radio
      // Radio > Label
      input[type="radio"].wsf-field + label.wsf-label {
        @include f-option-label-style('dark');
        background-color: unset;
        margin: 0;
      }
      // Radio > Button
      input[type="radio"].wsf-field:checked + label.wsf-label:before {
        background-color: var(--f-dark-option-action-color, #{$f-dark-option-action-color});
        border-color: var(--f-dark-option-border-color, #{$f-dark-option-border-color});
      }
      input[type="radio"].wsf-field + label.wsf-label:before {
        background-color: var(--f-dark-option-background-color, #{$f-dark-option-background-color});
        border-color: var(--f-dark-option-border-color, #{$f-dark-option-border-color});
      }
      input[type="radio"].wsf-image + label.wsf-label {
        padding-inline-start: 0;
      }

      //Options Spacing
      [data-type="radio"] > div:not(.wsf-grid) > div + div,
			[data-type="price_radio"] > div:not(.wsf-grid) > div + div,
      [data-type="radio"] fieldset > div:not(.wsf-grid) > div + div,
			[data-type="price_radio"] fieldset > div:not(.wsf-grid) > div + div {
        margin-block-start: var(--f-option-label-spacing, #{$f-option-label-spacing});
      }

      [data-type="radio"] > div.wsf-grid,
      [data-type="price_radio"] > div.wsf-grid,
      [data-type="radio"] fieldset > div.wsf-grid,
      [data-type="price_radio"] fieldset > div.wsf-grid {
        row-gap: var(--f-option-label-spacing);
      }

      // Checkboxes
      input[type="checkbox"].wsf-field + label.wsf-label {
        &::before,
        &::after {
          width: 1.4em;
          height: 1.4em;
          transform: none;
        }
      }
      input[type="checkbox"].wsf-field:checked + label.wsf-label::before {
        background-color: var(--f-dark-option-action-color, #{$f-dark-option-action-color});
        border-color: var(--f-dark-option-border-color, #{$f-dark-option-border-color});
      }
      input[type="checkbox"].wsf-field + label.wsf-label::before {
        background-color: var(--f-dark-option-background-color, #{$f-dark-option-background-color});
        border-color: var(--f-dark-option-border-color, #{$f-dark-option-border-color});
      }
      input[type="checkbox"].wsf-field + label.wsf-label {
        @include f-option-label-style('dark');
        background-color: unset;
        margin: 0;
      }

      //Options  Spacing
      [data-type="checkbox"] > div:not(.wsf-grid) > div + div,
			[data-type="price_checkbox"] > div:not(.wsf-grid) > div + div,
      [data-type="checkbox"] fieldset > div:not(.wsf-grid) > div + div,
      [data-type="price_checkbox"] fieldset > div:not(.wsf-grid) > div + div {
        margin-block-start: var(--f-option-label-spacing, #{$f-option-label-spacing});
      }

      [data-type="checkbox"] > div.wsf-grid,
      [data-type="price_checkbox"] > div.wsf-grid,
      [data-type="checkbox"] fieldset > div.wsf-grid,
      [data-type="price_checkbox"] fieldset > div.wsf-grid {
        row-gap: var(--f-option-label-spacing);
      }


      // Checkboxes and Radios with wsf-switch  or wsf-image class  or wsf-button
      input[type="checkbox"],
      input[type="radio"] {
        &.wsf-field.wsf-switch + label.wsf-label {
          -webkit-padding-start: 2.85em;
          padding-inline-start: 2.85em;
          &:before {
            width: 2.5em;
            height: 1.4em;
            border-radius: 1.2em;
          }
          &:after {
            height: calc(1.4em - 4px);
            width: calc(1.4em - 4px);
          }
        }
        &.wsf-field.wsf-switch:checked + label.wsf-label:after {
          left: calc(2.5em - calc(1.4em - 2px));
        }
        &.wsf-field.wsf-image + label.wsf-label {
          -webkit-padding-start: 0;
          padding-inline-start: 0;
        }
      }

			input[type="checkbox"].wsf-field.wsf-button + label.wsf-label, input[type="radio"].wsf-field.wsf-button + label.wsf-label {
				@include btn(#{$f-dark-radio-button-style});
			}
			input[type="checkbox"].wsf-field.wsf-button:checked + label.wsf-label, input[type="radio"].wsf-field.wsf-button:checked + label.wsf-label {
				@include btn(#{$f-dark-radio-button-active});
			}

      // Progress Bar
      progress[value]::-webkit-progress-bar {
        background-color: var(--f-dark-progress-background-color, #{$f-dark-progress-background-color});
        height: var(--f-progress-height, #{$f-progress-height});
        display: block;
      }
      progress.wsf-progress {
        height: var(--f-progress-height, #{$f-progress-height}); // Fixes progress label position
        border-radius: var(--f-progress-bar-radius, #{$f-progress-bar-radius});
        overflow: hidden;
      }
      progress[value]::-webkit-progress-value {
        background-color: var(--f-dark-progress-bar-fill-color, #{$f-dark-progress-bar-fill-color});
        border-radius: var(--f-progress-bar-radius, #{$f-progress-bar-radius});
      }

      // Color Picker
      .minicolors-theme-ws-form .minicolors-swatch {
        height: calc(100% - 1px); // There's a 1px overflow if set to 100%
      }

      // Range Slider


      input[type="range"] {
        -webkit-appearance: none; /* Hides the slider so that custom slider can be made */
        appearance: none;
        width: 100%; /* Specific width is required for Firefox. */
        background: transparent; /* Otherwise white in Chrome */
        --wsf-color-lower-track: var(--f-dark-range-left-track-color, #{$f-dark-range-left-track-color});
        --wsf-color-upper-track: var(--f-dark-range-right-track-color, #{$f-dark-range-right-track-color});
        background-color: var(--f-dark-range-background-color, #{$f-dark-range-background-color});
      }

      input[type="range"]::-moz-range-track {
        -webkit-appearance: none; /* Hides the slider so that custom slider can be made */
        appearance: none;
        width: 100%; /* Specific width is required for Firefox. */
        background: transparent; /* Otherwise white in Chrome */
        --wsf-color-lower-track: var(--f-dark-range-left-track-color, #{$f-dark-range-left-track-color});
        --wsf-color-upper-track: var(--f-dark-range-right-track-color, #{$f-dark-range-right-track-color});
        background-color: var(--f-dark-range-background-color, #{$f-dark-range-background-color});
      }

      input[type="range"]::-webkit-slider-thumb {
        -webkit-appearance: none;
        appearance: none;
        background-color: var(--f-dark-range-thumb-color, #{$f-dark-range-thumb-color});
      }

			input[type="range"]::-moz-range-thumb {
        -webkit-appearance: none;
        appearance: none;
        background-color: var(--f-dark-range-thumb-color, #{$f-dark-range-thumb-color});
      }

      input[type="range"]:focus {
        outline: none; /* Removes the blue border. You should probably do some kind of focus styling for accessibility reasons though. */
      }

      input[type="range"]::-ms-track {
        width: 100%;
        cursor: pointer;

        /* Hides the slider so custom styles can be added */
        background: transparent;
        border-color: transparent;
        color: transparent;
      }

      // Required
      .wsf-required-wrapper .wsf-text-danger {
        color: var(--f-dark-required-color, #{$f-dark-required-color});
      }

      // Dropzone

      input[type="text"].wsf-field ~ .dropzone {
        background-color: var(--f-dark-input-background, #{$f-dark-input-background});
        border-color: var(--f-dark-input-border-color, #{$f-dark-input-border-color});
      }

      input[type="text"].wsf-field ~ .dropzone .dz-message {
        color: var(--f-dark-input-text-color, #{$f-dark-input-text-color});
      }

      // File Upload

      input[type="file"].wsf-field {
        padding-inline-start: 1rem;
        &::file-selector-button {
          background: var(--f-dark-upload-btn-background-color, #{$f-dark-upload-btn-background-color}) !important;
          color: var(--f-dark-upload-btn-text-color, #{$f-dark-upload-btn-text-color});
          height: var(--f-input-height, #{$f-input-height}rem);
          position: relative;
          top: -1px;
          transition: all var(--btn-transition-duration) ease;
          &:hover {
            background: var(--f-dark-upload-btn-background-color-hover, #{$f-dark-upload-btn-background-color-hover}) !important;
            color: var(--f-dark-upload-btn-text-color-hover, #{$f-dark-upload-btn-text-color-hover});
          }
        }
      }

      // Legal

      [data-wsf-legal].wsf-field {
				@include f-input-style('dark');
      }

      // Alert

      .wsf-alert {
				@include f-input-style('dark');
				background-color: var(--base-ultra-light);
				border-left-width: 0.4rem;
				margin-block-end: 0;
				display: inline-block;

        &.wsf-alert-danger {
          background-color: hsl(var(--danger-light-h, #{$danger-light-h}) var(--danger-light-s, #{$danger-light-s}) var(--danger-light-l, #{$danger-light-l}));
          border-color: $danger-hex;
          color: hsl(var(--danger-dark-h, #{$danger-dark-h}) var(--danger-dark-s, #{$danger-dark-s}) var(--danger-dark-l, #{$danger-dark-l}));
        }

				&.wsf-alert-warning {
          background-color: hsl(var(--warning-light-h, #{$warning-light-h}) var(--warning-light-s, #{$warning-light-s}) var(--warning-light-l, #{$warning-light-l}));
          border-color: $warning-hex;
          color: hsl(var(--warning-dark-h, #{$warning-dark-h}) var(--warning-dark-s, #{$warning-dark-s}) var(--warning-dark-l, #{$warning-dark-l}));
        }

        &.wsf-alert-information {
          background-color: hsl(var(--info-light-h, #{$info-light-h}) var(--info-light-s, #{$info-light-s}) var(--info-light-l, #{$info-light-l}));
          border-color: var(--info-hex, #{$info-hex});
          color: hsl(var(--info-dark-h, #{$info-dark-h}) var(--info-dark-s, #{$info-dark-s}) var(--info-dark-l, #{$info-dark-l}));
        }

				&.wsf-alert-success {
          background-color: hsl(var(--success-light-h, #{$success-light-h}) var(--success-light-s, #{$success-light-s}) var(--success-light-l, #{$success-light-l}));
          border-color: var(--success-hex, #{$success-hex});
          color: hsl(var(--success-dark-h, #{$success-dark-h}) var(--success-dark-s, #{$success-dark-s}) var(--success-dark-l, #{$success-dark-l}));
        }
      }

      // Datetime (inline)
      .xdsoft_datetimepicker .xdsoft_calendar td.xdsoft_current,
      .xdsoft_datetimepicker
        .xdsoft_timepicker
        .xdsoft_time_box
        > div
        > div.xdsoft_current,
      .xdsoft_datetimepicker
        .xdsoft_label
        > .xdsoft_select
        > div
        > .xdsoft_option.xdsoft_current,
      .xdsoft_datetimepicker
        .xdsoft_label
        > .xdsoft_select
        > div
        > .xdsoft_option:hover,
      .xdsoft_datetimepicker .xdsoft_calendar td:hover,
      .xdsoft_datetimepicker
        .xdsoft_timepicker
        .xdsoft_time_box
        > div
        > div:hover {
        background: var(--primary) !important;
      }

      // Canvas (Signature)

      input[type="text"].wsf-field ~ canvas {
        @include f-input-style('dark');
				padding: 0;
				height: auto;
				background: none;
      }

      // Focus Style

      input[type="date"].wsf-field:focus,
      input[type="datetime-local"].wsf-field:focus,
      input[type="file"].wsf-field:focus,
      input[type="month"].wsf-field:focus,
      input[type="password"].wsf-field:focus,
      input[type="search"].wsf-field:focus,
      input[type="time"].wsf-field:focus,
      input[type="week"].wsf-field:focus,
      input[type="email"].wsf-field:focus,
      input[type="number"].wsf-field:focus,
      input[type="tel"].wsf-field:focus,
      input[type="text"].wsf-field:focus,
      input[type="url"].wsf-field:focus,
      select.wsf-field:focus,
			select.wsf-field ~ .select2-container--default.select2-container--focus:not(.select2-container--disabled) .select2-selection--single,
			select.wsf-field ~ .select2-container--default.select2-container--focus:not(.select2-container--disabled) .select2-selection--multiple,
      textarea.wsf-field:focus,
      button.wsf-button:focus,
      button.wsf-button.wsf-button-primary:focus {
        @include f-focus-style('dark');
      }
    }
  }

  ////////// Bricks

  @if $option-bricks == on {
    .form--dark,
    .form--dark .bricks-search-form,
    .form--dark .brxe-post-comments {
      input[type="date"],
      input[type="datetime-local"],
      input[type="month"],
      input[type="password"],
      input[type="search"],
      input[type="time"],
      input[type="week"],
      input[type="email"],
      input[type="number"],
      input[type="tel"],
      input[type="text"],
      input[type="url"],
      select:not([multiple]):not([size]) {
				height: var(--f-input-height, #{$f-input-height}rem);
      }

      .input,
      input:not([type="submit"]),
      select,
      textarea {
        @include f-input-style('dark');
        &::placeholder {
          color: var(--f-dark-input-placeholder-color, #{$f-dark-input-placeholder-color});
          opacity: var(--f-dark-input-placeholder-opacity, #{$f-dark-input-placeholder-opacity});
					transition: var(--transition-duration) var(--transition-timing) var(--transition-delay);
				}

				&:hover::placeholder {
					color: var(--f-dark-input-placeholder-color-hover, #{$f-dark-input-placeholder-color-hover});
				}
      }

      .bricks-button {
        @if $option-f-use-global-buttons == on {
          @include btn(#{$f-dark-submit-button-style});
        } @else {
        @include f-btn-style('dark');
        min-height: var(--f-input-height, #{$f-input-height}rem);
        }

        &.bricks-background-secondary {
          @if $option-f-use-global-buttons == on {
            @include btn(#{$f-dark-secondary-button-style});
          } @else {
          background-color: var(--f-dark-secondary-btn-background-color, #{$f-dark-secondary-btn-background-color});
          color: var(--f-dark-secondary-btn-text-color, #{$f-dark-secondary-btn-text-color});
          border-color: var(--f-dark-secondary-btn-background-color, #{$f-dark-secondary-btn-background-color});
            &:hover {
              background-color: var(--f-dark-secondary-btn-background-color-hover, #{$f-dark-secondary-btn-background-color-hover});
              color: var(--f-dark-secondary-btn-text-color-hover, #{$f-dark-secondary-btn-text-color-hover});
              border-color: var(--f-dark-secondary-btn-background-color-hover, #{$f-dark-secondary-btn-background-color-hover});
            }
          }
        }
      }

      .form-group {
        //padding-inline: calc(#{$f-grid-gutter} / 2) !important;
				padding: 0;
        &:not(.submit-button-wrapper) {
          margin-block-end: var(--f-field-margin-bottom, #{$f-field-margin-bottom});
        }
      }

			.message {
				margin-block-start: var(--f-field-margin-bottom, #{$f-field-margin-bottom});
			}

      label:not(.ff-el-form-check-label), div.label {
        @include f-label-style('dark');
      }

      .required:after {
        color: var(--f-dark-required-color, #{$f-dark-required-color});
      }

      // File upload

      input[type="file"] {
        padding: 0;
      }

      .choose-files {
        @if $option-f-use-global-buttons == on {
          @include btn(#{$f-dark-upload-button-style});
        } @else {
        padding: var(--f-input-padding-y $f-input-padding-x, #{$f-input-padding-y $f-input-padding-x});
        color: var(--f-dark-upload-btn-text-color, #{$f-dark-upload-btn-text-color});
				font-size: var(--f-label-size, --text-m);
        font-weight: var(--f-label-font-weight, #{$f-label-font-weight});
        line-height: var(--f-label-line-height, #{$f-label-line-height});
        background: var(--f-dark-upload-btn-background-color, #{$f-dark-upload-btn-background-color});
        transition: all var(--btn-transition-duration) ease;
          &:hover {
            color: var(--f-dark-upload-btn-text-color-hover, #{$f-dark-upload-btn-text-color-hover});
            background: var(--f-dark-upload-btn-background-color-hover, #{$f-dark-upload-btn-background-color-hover});
          }
        }
      }

      .file-result.show {
				font-size: var(--f-label-size, --text-m);
        font-weight: var(--f-label-font-weight, #{$f-label-font-weight});
        line-height: var(--f-label-line-height, #{$f-label-line-height});
        transition: all var(--btn-transition-duration) ease;
        & .remove {
          &:hover {
            background-color: var(--f-dark-btn-background-hover, #{$f-dark-btn-background-hover});
            color: var(--f-dark-btn-text-color-hover, #{$f-dark-btn-text-color-hover});
            border-color: var(--f-dark-btn-border-color-hover, #{$f-dark-btn-border-color-hover});
          }
        }
      }

      // Radio
      input[type="radio"] {
        accent-color: var(--f-dark-option-action-color, #{$f-dark-option-action-color});

        + label {
          @include f-option-label-style('dark');
          -webkit-padding-start: inherit;
          padding-inline-start: inherit;
          margin: 0;
        }
      }

      // Checkboxes

			.options-wrapper li {
				position: relative;
			}

      input[type="checkbox"]:not(.ff-el-form-check-checkbox):not(.ff-el-form-check-input) {
        width: 0px;
        height: 0px;
        padding: 0;
        margin: 0;
        opacity: 0;
        position: absolute;

        &:focus {
          outline: none;

          + label:before {
            @include f-focus-style('dark');
          }
        }
      }

      input[type="checkbox"] + label {
        @include f-option-label-style('dark');
        background-color: unset;
        display: block;
        position: relative;
        margin: 0;
        cursor: pointer;
      }

      input[type="checkbox"]:hover + label:before {
        background: var(--f-dark-option-action-color, #{$f-dark-option-action-color});
        box-shadow: inset 0px 0px 0px 2px transparent;
      }

      input[type="checkbox"] + label:before {
        content: "";
        display: block;
        width: 1.4em;
        height: 1.4em;
        border: 1px solid var(--f-dark-option-border-color, #{$f-dark-option-border-color});
        border-radius: 0.2em;
        position: absolute;
        inset-block-start: 0;
        inset-inline-start: 0;
        -webkit-transition: all 0.2s, background 0.2s ease-in-out;
        transition: all 0.2s, background 0.2s ease-in-out;
        background-color: var(--f-dark-option-background-color, #{$f-dark-option-background-color});
      }

      input[type="checkbox"]:checked + label:before {
        background: $f-dark-option-action-color;
        box-shadow: 0 0 0 1px var(--f-dark-option-border-color, #{$f-dark-option-border-color});
      }

      input[type="checkbox"]:checked {
        //position: relative;
        & + label:before {
          background: var(--f-dark-option-action-color, #{$f-dark-option-action-color});
          box-shadow: 0 0 0 1px var(--f-dark-option-border-color, #{$f-dark-option-border-color});
        }
        & + label:after {
          content: "";
          cursor: pointer;
          display: inline-block;
          height: 1.5em;
          width: 1.5em;
          position: absolute;
          inset-block-start: 0;
          inset-inline-start: 0;
          background: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3e%3cpath fill='%23ffffff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26l2.974 2.99L8 2.193z'/%3e%3c/svg%3e")
            50%
            no-repeat;
          background-size: 50%;
        }
      }

			select {
				background-image: none;
			}

			select:not(:has(+ span)) {
				@include f-select-arrow-style('dark');
			}

      //Options Smart Spacing
      .options-wrapper li + li {
        margin-block-start: var(--f-option-label-spacing, #{$f-option-label-spacing});
      }
    }
  } // END OPTION BRICKS
  @if $option-fluent-form == on {
    .form--dark .frm-fluent-form {

			// reset default Fluent Form Spacing
			@media (min-width: 768px) {
				.ff-t-container {
					gap: var(--f-grid-gutter, #{$f-grid-gutter});
				}
			}

      input[type="date"],
      input[type="datetime-local"],
      input[type="month"],
      input[type="password"],
      input[type="search"],
      input[type="time"],
      input[type="week"],
      input[type="email"],
      input[type="number"],
      input[type="tel"],
      input[type="text"],
      input[type="url"],
      select:not([multiple]):not([size]) {
        height: var(--f-input-height, #{$f-input-height}rem);
      }

      .input,
      input:not([type="submit"]),
      select,
      textarea {
        @include f-input-style('dark');
        &::placeholder {
          color: var(--f-dark-input-placeholder-color, #{$f-dark-input-placeholder-color});
          opacity: var(--f-dark-input-placeholder-opacity, #{$f-dark-input-placeholder-opacity});
					transition: var(--transition-duration) var(--transition-timing) var(--transition-delay);
        }

				&:hover::placeholder {
					color: var(--f-dark-input-placeholder-color-hover, #{$f-dark-input-placeholder-color-hover});
				}
      }

      .ff-el-is-error .ff-el-form-control {
        border-color: hsl(var(--danger-h, #{$danger-h}) var(--danger-s, #{$danger-s}) var(--danger-l, #{$danger-l}));
      }

      .text-danger {
        color: hsl(var(--danger-h, #{$danger-h}) var(--danger-s, #{$danger-s}) var(--danger-l, #{$danger-l}));
      }

      .ff-el-form-control:focus {
				//@include f-focus-style('dark');
        border-color: var(--f-dark-input-border-color, #{$f-dark-input-border-color});
        color: var(--f-dark-input-text-color, #{$f-dark-input-text-color});
				background-color: var(--f-dark-input-background, #{$f-dark-input-background});
      }

			.ff-el-form-control:hover:focus {
				color: var(--f-dark-input-placeholder-color-hover, #{$f-dark-input-placeholder-color-hover});
				background-color: var(--f-dark-input-color-background-hover, #{$f-dark-input-color-background-hover});
			}

      .ff-btn:not(.ff_upload_btn) {
        @if $option-f-use-global-buttons == on {
          @include btn(#{$f-dark-submit-button-style});
        } @else {
          @include f-btn-style('dark');
          min-height: var(--f-input-height, #{$f-input-height}rem);

          &:hover {
            opacity: inherit;
          }
        }
      }

			.ff-btn.ff-btn-save-progress {
				@if $option-f-use-global-buttons ==on {
					@include btn(#{$f-dark-save-button-style});
				}

				@else {
					background-color: var(--f-dark-save-btn-background-color, #{$f-dark-save-btn-background-color});
					color: var(--f-dark-save-btn-text-color, #{$f-dark-save-btn-text-color});
					border-color: var(--f-dark-save-btn-background-color, #{$f-dark-save-btn-background-color});
					transition: all var(--btn-transition-duration) ease;

					&:hover {
						background-color: var(--f-dark-save-btn-background-color-hover, #{$f-dark-save-btn-background-color-hover});
						color: var(--f-dark-save-btn-text-color-hover, #{$f-dark-save-btn-text-color-hover});
						border-color: var(--f-dark-save-btn-background-color-hover, #{$f-dark-save-btn-background-color-hover});
					}
				}
			}

			.ff-btn.ff-btn-secondary {
				@if $option-f-use-global-buttons ==on {
					@include btn(#{$f-dark-secondary-button-style});
				}

				@else {
					background-color: var(--f-dark-secondary-btn-background-color, #{$f-dark-secondary-btn-background-color});
					color: var(--f-dark-secondary-btn-text-color, #{$f-dark-secondary-btn-text-color});
					border-color: var(--f-dark-secondary-btn-background-color, #{$f-dark-secondary-btn-background-color});
					transition: all var(--btn-transition-duration) ease;

					&:hover {
						background-color: var(--f-dark-secondary-btn-background-color-hover, #{$f-dark-secondary-btn-background-color-hover});
						color: var(--f-dark-secondary-btn-text-color-hover, #{$f-dark-secondary-btn-text-color-hover});
						border-color: var(--f-dark-secondary-btn-background-color-hover, #{$f-dark-secondary-btn-background-color-hover});
					}
				}

				&.ff-btn-next {
					@if $option-f-use-global-buttons ==on {
						@include btn(#{$f-dark-next-button-style});
					}

					@else {
						background-color: var(--f-dark-next-btn-background-color, #{$f-dark-next-btn-background-color});
						color: var(--f-dark-next-btn-text-color, #{$f-dark-next-btn-text-color});
						border-color: var(--f-dark-next-btn-background-color, #{$f-dark-next-btn-background-color});
						transition: all var(--btn-transition-duration) ease;

						&:hover {
							background-color: var(--f-dark-next-btn-background-color-hover, #{$f-dark-next-btn-background-color-hover});
							color: var(--f-dark-next-btn-text-color-hover, #{$f-dark-next-btn-text-color-hover});
							border-color: var(--f-dark-next-btn-background-color-hover, #{$f-dark-next-btn-background-color-hover});
						}
					}
				}

				&.ff-btn-prev {
					@if $option-f-use-global-buttons ==on {
						@include btn(#{$f-dark-previous-button-style});
					}

					@else {
						background-color: var(--f-dark-prev-btn-background-color, #{$f-dark-prev-btn-background-color});
						color: var(--f-dark-prev-btn-text-color, #{$f-dark-prev-btn-text-color});
						border-color: var(--f-dark-prev-btn-background-color, #{$f-dark-prev-btn-background-color});
						transition: all var(--btn-transition-duration) ease;

						&:hover {
							background-color: var(--f-dark-prev-btn-background-color-hover, #{$f-dark-prev-btn-background-color-hover});
							color: var(--f-dark-prev-btn-text-color-hover, #{$f-dark-prev-btn-text-color-hover});
							border-color: var(--f-dark-prev-btn-background-color-hover, #{$f-dark-prev-btn-background-color-hover});
						}
					}
				}
			}

      .ff-el-group {
        padding-inline: calc(var(--f-grid-gutter, #{$f-grid-gutter}) / 2) !important;
        &:not(.ff_submit_btn_wrapper) {
          margin-block-end: var(--f-field-margin-bottom, #{$f-field-margin-bottom});
        }
      }

      label:not(.ff-el-form-check-label) {
        @include f-label-style('dark');

        &::after {
          color: var(--f-dark-required-color, #{$f-dark-required-color}) !important;
        }
      }
      // phone field with flag
      .iti input,
      .iti input[type="tel"],
      .iti input[type="text"] {
        @if var(--f-input-padding-x, #{$f-input-padding-x}) == 0 {
          padding-inline-start: calc(4.8rem + 0px);
        } @else {
          padding-inline-start: calc(4.8rem + 6px);
        }
      }

      // section break
      .ff-el-section-break {
        color: var(--f-dark-label-text-color, #{$f-dark-label-text-color});
      }

      // File upload

      input[type="file"] {
        padding: 0;
      }

      .ff_upload_btn.ff-btn {
        @if $option-f-use-global-buttons == on {
          @include btn(#{$f-dark-upload-button-style});
        } @else {
          background: var(--f-dark-upload-btn-background-color, #{$f-dark-upload-btn-background-color});
          padding: var(--f-input-padding-y, #{$f-input-padding-y}) var(--f-input-padding-x, #{$f-input-padding-x});
          color: var(--f-dark-upload-btn-text-color, #{$f-dark-upload-btn-text-color});
          font-size: var(--f-label-size, --text-m);
          font-weight: var(--f-label-font-weight, #{$f-label-font-weight});
          line-height: var(--f-label-line-height, #{$f-label-line-height});
          transition: all var(--btn-transition-duration) ease;
        }
      }

      .ff-upload-preview {
				font-size: var(--f-label-size, --text-m);
        font-weight: var(--f-label-font-weight, #{$f-label-font-weight});
        border-style: var(--f-input-border-style, #{$f-input-border-style});
        border-top-width: var(--f-input-border-top-size, #{$f-input-border-top-size}rem);
        border-right-width: var(--f-input-border-right-size, #{$f-input-border-right-size}rem);
        border-bottom-width: var(--f-input-border-bottom-size, #{$f-input-border-bottom-size}rem);
        border-left-width: var(--f-input-border-left-size, #{$f-input-border-left-size}rem);
        border-color: var(--f-dark-input-border-color, #{$f-dark-input-border-color});
        border-radius: var(--f-input-border-radius, #{$f-input-border-radius});
      }

      // Radio + Checkboxes

      .ff-el-form-check.ff-el-form-check- {
        display: flex;
        margin: 0;

        label {
          display: inherit;
          gap: 0.4em;
          margin: 0;
        }
      }


      .ff-el-form-check-label span, .ff_t_c {
        background-color: var(--f-dark-option-background-color, #{$f-dark-option-background-color});
        color: var(--f-dark-label-text-color, #{$f-dark-label-text-color});
        font-family: inherit;
        font-size: var(--f-option-label-size, --text-m);
        font-weight: var(--f-option-label-font-weight, #{$f-option-label-font-weight});
      }

      input.ff_gdpr_field,
      span.ff_tc_checkbox input {
        width: auto;
        height: initial;
        position: relative;
        top: initial;
      }

      // Radio
      input[type="radio"],
      input[type="checkbox"] {
        accent-color: var(--f-dark-option-action-color, #{$f-dark-option-action-color});
        top: initial;
      }

			// Radio as Buttons.
			.ff_list_buttons {
				@include radio-buttons-list;
			}

			.ff-el-group.ff_list_buttons {
				@include radio-buttons-style($f-dark-radio-button-style, $f-dark-radio-button-active);
				@include radio-buttons-mobile;
			}

      //Options Smart Spacing
      .ff-el-form-check + .ff-el-form-check {
        margin-block-start: var(--f-option-label-spacing, #{$f-option-label-spacing});
      }

			// Progress bar
			.ff-el-progress {
				background-color: var(--f-dark-progress-background-color, #{$f-dark-progress-background-color});
				height: var(--f-progress-height, #{$f-progress-height});
				border-radius: var(--f-progress-bar-radius, #{$f-progress-bar-radius});
			}

			.ff-el-progress-bar {
				background-color: var(--f-dark-progress-bar-fill-color, #{$f-dark-progress-bar-fill-color});
				border-radius: var(--f-progress-bar-radius, #{$f-progress-bar-radius});
				align-content: center;
			}
    }
  } //END OPTION FLUENT FORM
	// OXYGEN SEARCH STYLING
@if $option-oxygen == on {
  .form--dark.oxy-search-form {
    input[type="search"] {
      @include f-input-style('dark');
    }
    input[type="submit"] {
      @include f-btn-style('dark');
    }
  }
}

// WS Form - Datetime picker (dropdown - not available in firefox)
main:has(.form--dark) {
  ~ .xdsoft_datetimepicker .xdsoft_calendar td.xdsoft_current,
  ~ .xdsoft_datetimepicker
    .xdsoft_timepicker
    .xdsoft_time_box
    > div
    > div.xdsoft_current,
  ~ .xdsoft_datetimepicker
    .xdsoft_label
    > .xdsoft_select
    > div
    > .xdsoft_option.xdsoft_current,
  ~ .xdsoft_datetimepicker
    .xdsoft_label
    > .xdsoft_select
    > div
    > .xdsoft_option:hover,
  ~ .xdsoft_datetimepicker .xdsoft_calendar td:hover,
  ~ .xdsoft_datetimepicker
    .xdsoft_timepicker
    .xdsoft_time_box
    > div
    > div:hover {
    background: var(--primary) !important;
  }
}
} // END OPTION FORMS
