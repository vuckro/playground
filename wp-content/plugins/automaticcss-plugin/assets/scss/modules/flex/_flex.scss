// Classes are doubled to add specificity
@if $option-flex == on {
  @if $option-oxygen == off {
    @each $direction, $value in $flexDirections {
      .flex--#{$direction}.flex--#{$direction} {
        display: flex;
        flex-direction: #{$value};
      }
    }

    // Flex Breakpoints
    @each $breakpoint, $value in $breakpoints {
      @include breakpoint($breakpoint) {
        @each $direction, $directionValue in $flexDirections {
          .flex--#{$direction}-#{$breakpoint}.flex--#{$direction}-#{$breakpoint} {
            display: flex;
            flex-direction: #{$directionValue};
          }
        }
      }
    }

    // GERNERATE ALIGNMENTS

    @each $alignmentType, $directionSet in $flexAlignments {
      @each $direction, $value in $directionSet {
        @if $alignmentType != self {
          .#{$alignmentType}--#{$direction}.#{$alignmentType}--#{$direction} {
            #{$alignmentType}: $value;
          }
        } @else if $alignmentType == self {
          .#{$alignmentType}--#{$direction}.#{$alignmentType}--#{$direction} {
            align-self: $value;
          }
        }
      }
    }
		@each $breakpoint, $value in $breakpoints {
      @include breakpoint($breakpoint) {
				@each $alignmentType, $directionSet in $flexAlignments {
					@each $direction, $value in $directionSet {
						@if $alignmentType != self {
							.#{$alignmentType}--#{$direction}-#{$breakpoint}.#{$alignmentType}--#{$direction}-#{$breakpoint} {
								#{$alignmentType}: $value;
							}
						} @else if $alignmentType == self {
							.#{$alignmentType}--#{$direction}-#{$breakpoint}.#{$alignmentType}--#{$direction}-#{$breakpoint} {
								align-self: $value;
							}
						}
					}
				}
			}
		}

    .stretch.stretch {
      align-content: stretch;
      align-items: stretch;
      justify-content: stretch;
      justify-items: stretch;
    }

    .flex--wrap.flex--wrap {
      flex-wrap: wrap;
    }

    .flex--grow > * {
      flex-grow: 1;
    }

  } // End if builders off
} // End option flex is on
